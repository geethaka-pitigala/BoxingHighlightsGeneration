# -*- coding: utf-8 -*-
"""svm_model_training.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Xzg2cA0WUGbTllr0QAGaQc3nS6BTrH3D
"""

# --- Import all necessary libraries ---
import pandas as pd
from google.colab import files
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.svm import SVC
from sklearn.metrics import classification_report
import joblib

# --- Main Training and Saving Script ---
def train_and_save_svm():
    # 1. Upload and Load the Dataset
    print("--- Step 1: Uploading Data ---")
    print("Please upload your 'features.csv' file.")
    uploaded = files.upload()

    if not uploaded:
        print("No file uploaded. Process stopped.")
        return

    filename = next(iter(uploaded))
    print(f"\nLoading '{filename}'...")
    df = pd.read_csv(filename)

    # 2. Prepare Data for Training
    print("\n--- Step 2: Preparing Data ---")
    # Separate features (X) from the target label (y)
    X = df.drop('class_label', axis=1)
    y = df['class_label']

    # Split data into training and testing sets
    X_train, X_test, y_train, y_test = train_test_split(
        X, y, test_size=0.2, random_state=42, stratify=y
    )

    # Create and fit the scaler on the training data
    scaler = StandardScaler()
    X_train_scaled = scaler.fit_transform(X_train)
    X_test_scaled = scaler.transform(X_test) # Use the same scaler on the test data
    print("Data preparation complete.")

    # 3. Train the SVM Model
    print("\n--- Step 3: Training the SVM Model ---")
    # Initialize the SVM classifier
    svm_model = SVC(kernel='rbf', C=1.0, random_state=42)
    # Train the model on the scaled training data
    svm_model.fit(X_train_scaled, y_train)
    print("SVM model trained successfully.")

    # 4. Evaluate the Model (to confirm it works)
    print("\n--- Step 4: Evaluating Performance ---")
    y_pred_svm = svm_model.predict(X_test_scaled)
    print("SVM Performance Report:")
    print(classification_report(y_test, y_pred_svm))

    # 5. Save the Trained Model and Scaler
    print("\n--- Step 5: Saving Model and Scaler ---")
    joblib.dump(svm_model, 'svm_classifier.pkl')
    joblib.dump(scaler, 'scaler.pkl')
    print("\n✅ Success! The following files have been saved:")
    print("   - svm_classifier.pkl (your trained model)")
    print("   - scaler.pkl (the data scaler)")
    print("\nYou can now use these files in the testing script.")

# --- Run the full process ---
train_and_save_svm()

# --- Import all necessary libraries ---
import pandas as pd
from google.colab import files
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.svm import SVC
from sklearn.metrics import classification_report
import joblib

# --- Main Training, Saving, and Downloading Script ---
def train_save_and_download_svm():
    # 1. Upload and Load the Dataset
    print("--- Step 1: Uploading Data ---")
    print("Please upload your 'features.csv' file.")
    uploaded = files.upload()

    if not uploaded:
        print("No file uploaded. Process stopped.")
        return

    filename = next(iter(uploaded))
    print(f"\nLoading '{filename}'...")
    df = pd.read_csv(filename)

    # 2. Prepare Data for Training
    print("\n--- Step 2: Preparing Data ---")
    X = df.drop('class_label', axis=1)
    y = df['class_label']

    X_train, X_test, y_train, y_test = train_test_split(
        X, y, test_size=0.2, random_state=42, stratify=y
    )

    scaler = StandardScaler()
    X_train_scaled = scaler.fit_transform(X_train)
    X_test_scaled = scaler.transform(X_test)
    print("Data preparation complete.")

    # 3. Train the SVM Model
    print("\n--- Step 3: Training the SVM Model ---")
    svm_model = SVC(kernel='rbf', C=1.0, random_state=42)
    svm_model.fit(X_train_scaled, y_train)
    print("SVM model trained successfully.")

    # 4. Evaluate the Model (to confirm it works)
    print("\n--- Step 4: Evaluating Performance ---")
    y_pred_svm = svm_model.predict(X_test_scaled)
    print("SVM Performance Report:")
    print(classification_report(y_test, y_pred_svm))

    # 5. Save the Trained Model and Scaler to the Colab environment
    print("\n--- Step 5: Saving Model and Scaler ---")
    joblib.dump(svm_model, 'svm_classifier.pkl')
    joblib.dump(scaler, 'scaler.pkl')
    print("Model and scaler saved to the Colab environment.")

    # 6. --- NEW STEP: Download the saved files to your computer ---
    print("\n--- Step 6: Downloading Files ---")
    print("Your browser will now prompt you to download the saved files.")
    files.download('svm_classifier.pkl')
    files.download('scaler.pkl')
    print("\n✅ Download complete! Keep these files safe.")


# --- Run the full process ---
train_save_and_download_svm()